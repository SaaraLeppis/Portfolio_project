* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

.gallery {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  height: 100vh;
  gap: 3px;
  padding: 2rem;
}
/*Note: The height of the rows is tied to the viewport width, so that the cells maintain its aspect ratio perfectly fine. We have 8 rows each with the height of 5 viewport width. I experimented with these heights and came to the conclusion that 5% of viewport width is the perfect size for the height. We are doing this by setting the height of the row to 5vw (viewport width).
Note: All direct children of grid automatically become grid items.
*/
/* https://www.freecodecamp.org/news/how-to-create-an-image-gallery-with-css-grid-e0f0fd666a5c/ */

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.gallery-item_1 {
  grid-column-start: 1; /* 1 / span 2; */
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 4;
}
.gallery-item_2 {
  grid-column: 4 / span 5;
  grid-row: 1 / span 2;
}
.gallery-item_3 {
  grid-column: 4 / span 1;
  grid-row: 3 / span 1;
}
.gallery-item_8 {
  grid-column: 5 / span 1;
  grid-row: 3 / span 1;
}
.gallery-item_5 {
  grid-column: 6 / span 3;
  grid-row: 3 / span 3;
}
.gallery-item_6 {
  grid-column: 6 / span 3;
  grid-row: 6 / span 3;
}
.gallery-item_7 {
  grid-column: 3 / span 3;
  grid-row: 4 / span 2;
}
.gallery-item_4 {
  grid-column: 1 / span 2;
  grid-row: 4 / span 2;
}
.gallery-item_9 {
  grid-column: 1 / span 5;
  grid-row: 6 / span 3;
}
